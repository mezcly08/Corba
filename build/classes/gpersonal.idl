module sop_corba{
	interface AdminCllbckint{
        void notificar(in string nombreCompleto, in long id );
    };
    interface GestionPersonal{
        struct personalDTO{
            string tipo_id; 
			long id;
			string nombreCompleto;
			string ocupacion;
			string usuario;
			string clave;
			string fechaIngreso;
        };

        struct credencialDTO{
            string usuario;
            string clave;
            long id;
        };
		
		struct DatosSesionDTO{
			long idPacienteValorado;
			long contValoracion;
			string ocupacion;
		};
		
		struct InfoSesionDTO{
			long idPaciente;
			long numFase;
			string fechaSesion;
			long numSesion;
			long presionArterial;
			long frecuenciaInicial;
			long frecuenciaFinal;
			long saturacionOxigeno;
			string estadoPaciente;
			string observaciones;
		};
		
		struct PacienteDTO{
			string nombreCompleto;
			long id;
			string fechaIngreso; 
			string ordenApoyo;
			string hostoriaClinica;
			string estado;
		};
		
		struct ValorarPacienteDTO{
			string idPaciente;
			string concepto;
			string obversaciones;
			string fechaValoracion;
			string Profesion;
			string NombreProfesional;
		};

        void registrarPersonal(in personalDTO objPersonal, out boolean res);
        boolean consultarPersonal(in long id, out personalDTO objPersonal);
		boolean consulPersonal(in long id);
		boolean existevaloracion(in long id, in string ocupacion);
		PacienteDTO consultarPaciente(in long id);
		boolean registrarPaciente(in PacienteDTO objPacientes);
        boolean abrirSesion(in credencialDTO objCredencial);
		void registrarCallback(in AdminCllbckint objCllbck) ; 
		boolean valorarPaciente(in ValorarPacienteDTO objValorarPaciente);
		ValorarPacienteDTO consultarValoracion(in string id, in string ocupacion);
		boolean existenPacientes(in long id);
		void eliminarCallback(in AdminCllbckint objAdmin);
		boolean guardarInfoSesion(in InfoSesionDTO objInfoSesionDTO);
		InfoSesionDTO consultarInfoSesion( in long id);
        void validarValoracion(in long id, in string ocupacion);
		long contador(in long id, in string ocupacion);
		boolean eliminarList(in long id);
    };
};